hljs.registerLanguage("nix", (() => {
  "use strict";
  return ({NUMBER_MODE, HASH_COMMENT_MODE, C_BLOCK_COMMENT_MODE}) => {
    const n = {
              keyword: "rec with let in inherit assert if else then",
              literal: "true false or and null",
              built_in:
                "import abort baseNameOf dirOf isNull builtins map removeAttrs throw toString derivation",
            };

    const i = { className: "subst", begin: /\$\{/, end: /}/, keywords: n };

    const t = {
      className: "string",
      contains: [i],
      variants: [
        { begin: "''", end: "''" },
        { begin: '"', end: '"' },
      ],
    };

    const s = [
      NUMBER_MODE,
      HASH_COMMENT_MODE,
      C_BLOCK_COMMENT_MODE,
      t,
      {
        begin: /[a-zA-Z0-9-_]+(\s*=)/,
        returnBegin: !0,
        relevance: 0,
        contains: [
          {
            className: "attr",
            begin: /\S+/,
          },
        ],
      },
    ];

    return (
      (i.contains = s),
      { name: "Nix", aliases: ["nixos"], keywords: n, contains: s }
    );
  };
})());
